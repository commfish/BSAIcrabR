[{"path":"https://commfish.github.io/BSAIcrabR/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 Tyler Jackson, ADF&G Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://commfish.github.io/BSAIcrabR/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Tyler Jackson. Author, maintainer.","code":""},{"path":"https://commfish.github.io/BSAIcrabR/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Jackson T (2025). BSAIcrabR: Package (One Line, Title Case). R package version 0.1, https://commfish.github.io/BSAIcrabR/.","code":"@Manual{,   title = {BSAIcrabR: What the Package Does (One Line, Title Case)},   author = {Tyler Jackson},   year = {2025},   note = {R package version 0.1},   url = {https://commfish.github.io/BSAIcrabR/}, }"},{"path":[]},{"path":"https://commfish.github.io/BSAIcrabR/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"What the Package Does (One Line, Title Case)","text":"{r} devtools::install_github(\"commfish/BSAIcrabR\")","code":""},{"path":"https://commfish.github.io/BSAIcrabR/index.html","id":"data-access","dir":"","previous_headings":"","what":"Data Access","title":"What the Package Does (One Line, Title Case)","text":"Data access features construction. Eventually, data access load_* series functions. Use functions download data require connected ADF&G network OceanAK account (fish ticket data).","code":""},{"path":"https://commfish.github.io/BSAIcrabR/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"What the Package Does (One Line, Title Case)","text":"example workflow summarizing fishery data necessary BBRKC stock assessment: ```{r} # load library(BSAIcrabR)","code":""},{"path":[]},{"path":"https://commfish.github.io/BSAIcrabR/index.html","id":"count-pot-data","dir":"","previous_headings":"","what":"count pot data","title":"What the Package Does (One Line, Title Case)","text":"pot_sum <- load_pot_dump(“./bbrkc/data/RKC-1990-2023_potsum.csv”, stock = “BBRKC”, clean = T)","code":""},{"path":"https://commfish.github.io/BSAIcrabR/index.html","id":"measure-pot-data","dir":"","previous_headings":"","what":"measure pot data","title":"What the Package Does (One Line, Title Case)","text":"obs_meas <- load_crab_dump(“./bbrkc/data/RKC-1990-2023_crab_dump.csv”, stock = “BBRKC”, clean = T)","code":""},{"path":"https://commfish.github.io/BSAIcrabR/index.html","id":"dockside-data","dir":"","previous_headings":"","what":"dockside data","title":"What the Package Does (One Line, Title Case)","text":"dock <- load_dockside(“./bbrkc/data/RKC-1990-2023_retained_size_freq.csv”, stock = “BBRKC”, clean = T)","code":""},{"path":"https://commfish.github.io/BSAIcrabR/index.html","id":"timeseries-of-directed-effort","dir":"","previous_headings":"","what":"timeseries of directed effort","title":"What the Package Does (One Line, Title Case)","text":"dir_effort_prerat <- read_csv(“./misc/data/fish_ticket_timeseries/directed_effort_timeseries_DP.csv”)","code":""},{"path":"https://commfish.github.io/BSAIcrabR/index.html","id":"fish-ticket-summary-by-stat-area","dir":"","previous_headings":"","what":"fish ticket summary by stat area","title":"What the Package Does (One Line, Title Case)","text":"readRDS(“../adfg_crab_observer/misc/data/fish_ticket_timeseries/fish_ticket_stat_area_summary.RDS”) %>% mutate(fishery = gsub(“XR”, “TR”, fishery)) %>% filter(substring(fishery, 1, 2) == “TR”) %>% mutate(fishery = substring(fishery, 1, 4)) %>% # add crab year add_crab_year(., date_correct = F) %>% # rename fields rename(live_n = live_number, deadloss_n = deadloss_number, live_lb = live_lbs, deadloss_lb = deadloss_lbs) -> ft_statarea","code":""},{"path":"https://commfish.github.io/BSAIcrabR/index.html","id":"incidental-directected-fish-ticket-report","dir":"","previous_headings":"","what":"incidental-directected fish ticket report","title":"What the Package Does (One Line, Title Case)","text":"read_csv(“../adfg_crab_observer/misc/data/fish_ticket_timeseries/Q_dir_inc_fish_ticket.csv”, skip = 2) %>% janitor::clean_names() %>% filter(grepl(“Total”, seasons)) %>% filter(!grepl(“Grand”, seasons)) %>% mutate(year = substring(seasons, 3, 4)) %>% transmute(year, QT = wbt_directed_effort, QO = bss_directed_effort) %>% left_join(read_csv(“../adfg_crab_observer/misc/data/fish_ticket_timeseries/T_dir_inc_fish_ticket.csv”, skip = 2) %>% janitor::clean_names() %>% filter(grepl(“Total”, seasons)) %>% filter(!grepl(“Grand”, seasons)) %>% mutate(year = substring(seasons, 3, 4)) %>% transmute(year, TT = ebt_directed_effort, TR = bbr_directed_effort) %>% full_join(readRDS(“../adfg_crab_observer/misc/data/fish_ticket_timeseries/fish_ticket_stat_area_summary_2_21_25.RDS”) %>% filter(substring(fishery, 1, 2) == “XR”) %>% mutate(year = substring(fishery, 3, 4)) %>% group_by(year) %>% summarise(XR = sum(pots, na.rm = T))), = “year”) %>% pivot_longer(2:ncol(.), names_to = “fish”, values_to = “effort”) %>% mutate(fish = gsub(“XR”, “TR”, fish)) %>% mutate(fishery = paste0(fish, year)) %>% group_by(fishery) %>% summarise(effort = sum(effort, na.rm = T)) %>% # join prerationalized doug pengilly data bind_rows(dir_effort_prerat) %>% # add crab year add_crab_year(date_correct = F) %>% # fisheries bind_rows(readRDS(“../adfg_crab_observer/misc/data/fish_ticket_timeseries/fish_ticket_stat_area_summary_2_21_25.RDS”) %>% filter(!(substring(fishery, 1, 2) %% c(“QO”, “TT”, “TR”, “QT”, “XR”))) %>% group_by(fishery, crab_year) %>% summarise(effort = sum(pots, na.rm = T)) %>% ungroup) %>% arrange(fishery) %>% # temporarily add CP98 (QP) add_row(fishery = “QP98”, effort = 89500, crab_year = 1998) %>% group_by(fishery, crab_year) %>% summarise(effort = sum(effort, na.rm = T)) %>% ungroup -> dir_effort","code":""},{"path":"https://commfish.github.io/BSAIcrabR/index.html","id":"retained-catch--","dir":"","previous_headings":"","what":"retained catch —-","title":"What the Package Does (One Line, Title Case)","text":"get_retained_catch(ft_data = ft_statarea) %>% write_csv(“./bbrkc/output/2025/retained_catch.csv”)","code":""},{"path":"https://commfish.github.io/BSAIcrabR/index.html","id":"total-catch--","dir":"","previous_headings":"","what":"total catch —-","title":"What the Package Does (One Line, Title Case)","text":"get_total_catch(pot_data = pot_sum, crab_data = obs_meas, ft_data = dir_effort, stock = “BBRKC”) %>% write_csv(“./bbrkc/output/2025/total_catch.csv”)","code":""},{"path":"https://commfish.github.io/BSAIcrabR/index.html","id":"crab-fishery-discards--","dir":"","previous_headings":"","what":"crab fishery discards —-","title":"What the Package Does (One Line, Title Case)","text":"get_discards(retained_catch = get_retained_catch(ft_data = ft_statarea), total_catch = get_total_catch(pot_data = pot_sum, crab_data = obs_meas, ft_data = dir_effort, stock = “BBRKC”), stock = “BBRKC”) %>% write_csv(“./bbrkc/output/2025/discards.csv”)","code":""},{"path":"https://commfish.github.io/BSAIcrabR/index.html","id":"retained-size-comp--","dir":"","previous_headings":"","what":"retained size comp —-","title":"What the Package Does (One Line, Title Case)","text":"get_dockside_comp(data = dock, = NULL) %>% write_csv(“./bbrkc/output/2025/retained_catch_composition.csv”)","code":""},{"path":"https://commfish.github.io/BSAIcrabR/index.html","id":"observer-size-comp--","dir":"","previous_headings":"","what":"observer size comp —-","title":"What the Package Does (One Line, Title Case)","text":"get_observer_comp(data = obs_meas, = “sex”) -> obs_comp","code":""},{"path":"https://commfish.github.io/BSAIcrabR/index.html","id":"directed-fishery","dir":"","previous_headings":"","what":"directed fishery","title":"What the Package Does (One Line, Title Case)","text":"obs_comp %>% filter(substring(fishery, 1, 2) == “TR”) %>% write_csv(“./bbrkc/output/2025/directed_total_composition.csv”)","code":""},{"path":"https://commfish.github.io/BSAIcrabR/index.html","id":"e166-tanner-crab","dir":"","previous_headings":"","what":"e166 tanner crab","title":"What the Package Does (One Line, Title Case)","text":"obs_comp %>% filter(substring(fishery, 1, 2) == “TT”) %>% write_csv(“./bbrkc/output/2025/tanner_bycatch_composition.csv”) ```","code":""},{"path":"https://commfish.github.io/BSAIcrabR/reference/add_calc_wt.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Calculated Weight — add_calc_wt","title":"Add Calculated Weight — add_calc_wt","text":"Add calculated weight based weight length parameters.","code":""},{"path":"https://commfish.github.io/BSAIcrabR/reference/add_calc_wt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Calculated Weight — add_calc_wt","text":"","code":"add_calc_wt(x, stock, units = \"t\")"},{"path":"https://commfish.github.io/BSAIcrabR/reference/add_calc_wt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Calculated Weight — add_calc_wt","text":"x crab data includes fields 'size', 'sex', 'clutch' 'maturity' chionoecetes stocks (use_observer = T) 'crab_year' (use_historic = T). stock NULL. Character string stock abbreviation: BSSC, WBT, EBT, BBRKC, EAG, WAG, PIGKC, SMBKC, PIBKC, PIRKC, WAIRKC. units NULL. Unit measurement, \"t\" \"lb\". Default = \"t\".","code":""},{"path":"https://commfish.github.io/BSAIcrabR/reference/add_calc_wt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Calculated Weight — add_calc_wt","text":"x additional column 'calc_wt'","code":""},{"path":"https://commfish.github.io/BSAIcrabR/reference/add_calc_wt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add Calculated Weight — add_calc_wt","text":"","code":"add_calc_wt(data, stock = \"BBRKC\") #> Error in add_calc_wt(data, stock = \"BBRKC\"): Cannot find sex !!"},{"path":"https://commfish.github.io/BSAIcrabR/reference/add_crab_year.html","id":null,"dir":"Reference","previous_headings":"","what":"Add crab year to data — add_crab_year","title":"Add crab year to data — add_crab_year","text":"Add crab year observer dockside data","code":""},{"path":"https://commfish.github.io/BSAIcrabR/reference/add_crab_year.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add crab year to data — add_crab_year","text":"","code":"add_crab_year(x, date_correct = T, date_format = \"mdy\")"},{"path":"https://commfish.github.io/BSAIcrabR/reference/add_crab_year.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add crab year to data — add_crab_year","text":"x Observer dockside data frame \"fishery\" code column. date_correct crab year correction date different crab year regulatory year time, default = T. date_format Format date field, default = \"mdy\".","code":""},{"path":"https://commfish.github.io/BSAIcrabR/reference/add_crab_year.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add crab year to data — add_crab_year","text":"x additional column 'crab_year'","code":""},{"path":"https://commfish.github.io/BSAIcrabR/reference/add_crab_year.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add crab year to data — add_crab_year","text":"","code":"add_crab_year(dockside) #> Error: object 'dockside' not found"},{"path":"https://commfish.github.io/BSAIcrabR/reference/add_legal.html","id":null,"dir":"Reference","previous_headings":"","what":"Add legal status — add_legal","title":"Add legal status — add_legal","text":"Add legal status crab data","code":""},{"path":"https://commfish.github.io/BSAIcrabR/reference/add_legal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add legal status — add_legal","text":"","code":"add_legal(x, stock = NULL, use_observer = T, use_current = T)"},{"path":"https://commfish.github.io/BSAIcrabR/reference/add_legal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add legal status — add_legal","text":"x crab data includes fields 'size' 'sex', 'legal' (use_observer = T) 'crab_year' (use_historic = T). stock NULL. Character string stock abbreviation: BSSC, WBT, EBT, BBRKC, EAG, WAG, PIGKC, SMBKC, PIBKC, PIRKC, WAIRKC. use_observer T/F. Default observer record available. x must contain field 'legal'. Default = T. use_current T/F. Use current legal size whole time series, WBT EBT . Default = T.","code":""},{"path":"https://commfish.github.io/BSAIcrabR/reference/add_legal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add legal status — add_legal","text":"x additional column 'legal' overwritten legal definition based 1) observer records use_observer = T, 2) size sex observer record missing uncertain. 0 = sublegal, 1 = legal.","code":""},{"path":"https://commfish.github.io/BSAIcrabR/reference/add_legal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add legal status — add_legal","text":"","code":"add_legal(x = crab_dump, stock = \"BBRKC\") #> Error: object 'crab_dump' not found"},{"path":"https://commfish.github.io/BSAIcrabR/reference/add_permit_holder.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Permit Holder to Observer Pot Data — add_permit_holder","title":"Add Permit Holder to Observer Pot Data — add_permit_holder","text":"Use fish ticket dump CFEC permit holder information join permit holder proxy captain AIGKC data","code":""},{"path":"https://commfish.github.io/BSAIcrabR/reference/add_permit_holder.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Permit Holder to Observer Pot Data — add_permit_holder","text":"","code":"add_permit_holder(ft_dump, pot_data, permit_path = \"aigkc/data/permits\")"},{"path":"https://commfish.github.io/BSAIcrabR/reference/add_permit_holder.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Permit Holder to Observer Pot Data — add_permit_holder","text":"ft_dump NULL. AIGKC fish ticket dump. pot_data NULL. Observer count pot data format output load_pot_dump() permits_path NULL. File path CFEC permit data directory","code":""},{"path":"https://commfish.github.io/BSAIcrabR/reference/add_permit_holder.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Permit Holder to Observer Pot Data — add_permit_holder","text":"Pot data additional column 'permit_holder'.","code":""},{"path":"https://commfish.github.io/BSAIcrabR/reference/add_permit_holder.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add Permit Holder to Observer Pot Data — add_permit_holder","text":"","code":"load_pot_dump(\"./data.csv\", stock = \"BBRKC\") #> Error: './data.csv' does not exist in current working directory ('/home/runner/work/BSAIcrabR/BSAIcrabR/docs/reference')."},{"path":"https://commfish.github.io/BSAIcrabR/reference/add_target_stock.html","id":null,"dir":"Reference","previous_headings":"","what":"Add target stock to data — add_target_stock","title":"Add target stock to data — add_target_stock","text":"Add target stock based fishery code","code":""},{"path":"https://commfish.github.io/BSAIcrabR/reference/add_target_stock.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add target stock to data — add_target_stock","text":"","code":"add_target_stock(x, col = fishery)"},{"path":"https://commfish.github.io/BSAIcrabR/reference/add_target_stock.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add target stock to data — add_target_stock","text":"x data frame col fishery code colum, default = fishery","code":""},{"path":"https://commfish.github.io/BSAIcrabR/reference/add_target_stock.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add target stock to data — add_target_stock","text":"x additional column 'target_stock'","code":""},{"path":"https://commfish.github.io/BSAIcrabR/reference/add_target_stock.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add target stock to data — add_target_stock","text":"","code":"add_target_stock(x) #> Error: object 'x' not found"},{"path":"https://commfish.github.io/BSAIcrabR/reference/clean_lat_lon.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean Lat and Lon — clean_lat_lon","title":"Clean Lat and Lon — clean_lat_lon","text":"Clean latitude longitude data across dateline","code":""},{"path":"https://commfish.github.io/BSAIcrabR/reference/clean_lat_lon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean Lat and Lon — clean_lat_lon","text":"","code":"clean_lat_lon(x)"},{"path":"https://commfish.github.io/BSAIcrabR/reference/clean_lat_lon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean Lat and Lon — clean_lat_lon","text":"x Pot observer data columns longitude, latitude, eastwest","code":""},{"path":"https://commfish.github.io/BSAIcrabR/reference/clean_lat_lon.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clean Lat and Lon — clean_lat_lon","text":"x location information correct across date line negative","code":""},{"path":"https://commfish.github.io/BSAIcrabR/reference/clean_lat_lon.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Clean Lat and Lon — clean_lat_lon","text":"","code":"clean_lat_lon(pots) #> Error: object 'pots' not found"},{"path":"https://commfish.github.io/BSAIcrabR/reference/get_avg_wt.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Average Weight — get_avg_wt","title":"Get Average Weight — get_avg_wt","text":"Get average weight crab grouping variable using weight length parameters","code":""},{"path":"https://commfish.github.io/BSAIcrabR/reference/get_avg_wt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Average Weight — get_avg_wt","text":"","code":"get_avg_wt(data, stock, by, lump = T, units = \"t\")"},{"path":"https://commfish.github.io/BSAIcrabR/reference/get_avg_wt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Average Weight — get_avg_wt","text":"data NULL. Crab sample data format output load_crab_dump() stock NULL. Character string stock abbreviation: BSSC, WBT, EBT, BBRKC, EAG, WAG, PIGKC, SMBKC, PIBKC, PIRKC, WAIRKC. NULL. Vector column names crab year, fishery, size use grouping variable. lump T/F Lump shell condition new old (TRUE) (FALSE). Default = TRUE. units NULL. Unit measurement, \"t\" \"lb\". Default = \"t\".","code":""},{"path":"https://commfish.github.io/BSAIcrabR/reference/get_avg_wt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Average Weight — get_avg_wt","text":"Data frame including crab year, fishery, grouping variables, average weight.","code":""},{"path":"https://commfish.github.io/BSAIcrabR/reference/get_avg_wt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Average Weight — get_avg_wt","text":"","code":"get_avg_wt(data, by = \"group\") #> Error in UseMethod(\"filter\"): no applicable method for 'filter' applied to an object of class \"function\""},{"path":"https://commfish.github.io/BSAIcrabR/reference/get_discards.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Directed Discards — get_discards","title":"Get Directed Discards — get_discards","text":"Estimate directed fishery discards sex using subtraction method","code":""},{"path":"https://commfish.github.io/BSAIcrabR/reference/get_discards.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Directed Discards — get_discards","text":"","code":"get_discards(retained_catch, total_catch, stock)"},{"path":"https://commfish.github.io/BSAIcrabR/reference/get_discards.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Directed Discards — get_discards","text":"retained_catch NULL. Output get_retaied_catch(). total_catch NULL. Output get_total_catch(). '' argument anything long group sex included. stock NULL. Character string stock abbreviation: BSSC, WBT, EBT, BBRKC, EAG, WAG, PIGKC, SMBKC, PIBKC, PIRKC, WAIRKC.","code":""},{"path":"https://commfish.github.io/BSAIcrabR/reference/get_discards.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Directed Discards — get_discards","text":"Data frame including crab year, fishery, sex, discards, discard mortality.","code":""},{"path":"https://commfish.github.io/BSAIcrabR/reference/get_discards.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Directed Discards — get_discards","text":"","code":"get_discards(retained_catch, total_catch, stock = \"BBRKC\") #> Error: object 'total_catch' not found"},{"path":"https://commfish.github.io/BSAIcrabR/reference/get_dockside_comp.html","id":null,"dir":"Reference","previous_headings":"","what":"Get retained size composition — get_dockside_comp","title":"Get retained size composition — get_dockside_comp","text":"Compute retained size composition dockside data","code":""},{"path":"https://commfish.github.io/BSAIcrabR/reference/get_dockside_comp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get retained size composition — get_dockside_comp","text":"","code":"get_dockside_comp(data, by = NULL, lump = T)"},{"path":"https://commfish.github.io/BSAIcrabR/reference/get_dockside_comp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get retained size composition — get_dockside_comp","text":"data NULL. Dockside sample data format output load_dockside() NULL. Vector column names crab year, fishery, size use grouping variable. lump T/F lump shell condition new old (TRUE) (FALSE). Default = TRUE.","code":""},{"path":"https://commfish.github.io/BSAIcrabR/reference/get_dockside_comp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get retained size composition — get_dockside_comp","text":"Size frequency year, fishery, size","code":""},{"path":"https://commfish.github.io/BSAIcrabR/reference/get_dockside_comp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get retained size composition — get_dockside_comp","text":"","code":"dockside_comp(data, by = \"shell\", lump = T) #> Error in dockside_comp(data, by = \"shell\", lump = T): could not find function \"dockside_comp\""},{"path":"https://commfish.github.io/BSAIcrabR/reference/get_observer_comp.html","id":null,"dir":"Reference","previous_headings":"","what":"Get observer size composition — get_observer_comp","title":"Get observer size composition — get_observer_comp","text":"Compute size composition observer measure pot data","code":""},{"path":"https://commfish.github.io/BSAIcrabR/reference/get_observer_comp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get observer size composition — get_observer_comp","text":"","code":"get_observer_comp(data, by = NULL, lump = T)"},{"path":"https://commfish.github.io/BSAIcrabR/reference/get_observer_comp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get observer size composition — get_observer_comp","text":"data NULL. Dockside sample data format output load_crab_dump() NULL. Vector column names crab year, fishery, size use grouping variable. lump T/F. Lump shell condition new old (TRUE) (FALSE). Default = TRUE.","code":""},{"path":"https://commfish.github.io/BSAIcrabR/reference/get_observer_comp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get observer size composition — get_observer_comp","text":"Size frequency year, fishery, size","code":""},{"path":"https://commfish.github.io/BSAIcrabR/reference/get_observer_comp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get observer size composition — get_observer_comp","text":"","code":"dockside_comp(data, by = \"shell\", lump = T) #> Error in dockside_comp(data, by = \"shell\", lump = T): could not find function \"dockside_comp\""},{"path":"https://commfish.github.io/BSAIcrabR/reference/get_retained_catch.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Retained Catch — get_retained_catch","title":"Get Retained Catch — get_retained_catch","text":"Get retained catch fish ticket data","code":""},{"path":"https://commfish.github.io/BSAIcrabR/reference/get_retained_catch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Retained Catch — get_retained_catch","text":"","code":"get_retained_catch(ft_data, by = NULL, stock = NULL, units = \"t\")"},{"path":"https://commfish.github.io/BSAIcrabR/reference/get_retained_catch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Retained Catch — get_retained_catch","text":"ft_data NULL. Fish ticket data fields 'crab_year', 'fishery', 'effort' whatever variables specified . NULL. Vector column names crab year, fishery use grouping variable. Must present ft_data. units NULL. Unit measurement, \"t\" \"lb\". Default = \"t\".","code":""},{"path":"https://commfish.github.io/BSAIcrabR/reference/get_retained_catch.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Retained Catch — get_retained_catch","text":"Data frame including crab year, fishery, grouping variables, retained catch.","code":""},{"path":"https://commfish.github.io/BSAIcrabR/reference/get_retained_catch.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Retained Catch — get_retained_catch","text":"","code":"get_retained_catch(ft_data, by = NULL) #> Error in if (is.null(stock) | !(stock %in% c(\"AIGKC\", \"WAG\", \"EAG\"))) {    out <- ft_data %>% group_by_at(c(\"crab_year\", \"fishery\",         by)) %>% summarise(dir_retained_n = sum(dir_live_n, dir_deadloss_n,         na.rm = T), dir_retained_wt = sum(dir_live_lb, dir_deadloss_lb,         na.rm = T) * unit_convert, inc_retained_n = sum(inc_live_n,         inc_deadloss_n, na.rm = T), inc_retained_wt = sum(inc_live_lb,         inc_deadloss_lb, na.rm = T) * unit_convert, tot_retained_n = sum(tot_live_n,         tot_deadloss_n, na.rm = T), tot_retained_wt = sum(tot_live_lb,         tot_deadloss_lb, na.rm = T) * unit_convert) %>% ungroup %>%         mutate(dir_retained_n = ifelse(crab_year < 2005, NA,             dir_retained_n), dir_retained_wt = ifelse(crab_year <             2005, NA, dir_retained_wt), inc_retained_n = ifelse(crab_year <             2005, NA, inc_retained_n), inc_retained_wt = ifelse(crab_year <             2005, NA, inc_retained_wt), tot_retained_n = ifelse(crab_year >             2005, dir_retained_n + inc_retained_n, tot_retained_n),             tot_retained_wt = ifelse(crab_year > 2005, dir_retained_wt +                 inc_retained_wt, tot_retained_wt)) %>% filter(!is.na(fishery))}: argument is of length zero"},{"path":"https://commfish.github.io/BSAIcrabR/reference/get_total_catch.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Total Catch — get_total_catch","title":"Get Total Catch — get_total_catch","text":"Estimate total catch observer CPUE data","code":""},{"path":"https://commfish.github.io/BSAIcrabR/reference/get_total_catch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Total Catch — get_total_catch","text":"","code":"get_total_catch(   pot_data,   crab_data,   ft_data,   stock,   by = NULL,   lump = T,   units = \"t\" )"},{"path":"https://commfish.github.io/BSAIcrabR/reference/get_total_catch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Total Catch — get_total_catch","text":"pot_data NULL. Observer count pot data format output load_pot_dump() crab_data NULL. Observer measure pot data format output load_crab_dump() ft_data NULL. Fish ticket data fields 'crab_year', 'fishery', 'effort' whatever variables specified . stock NULL. Character string stock abbreviation: BSSC, WBT, EBT, BBRKC, EAG, WAG, PIGKC, SMBKC, PIBKC, PIRKC, WAIRKC. NULL. Vector column names crab year, fishery, group use grouping variable. lump T/F. Lump shell condition new old (TRUE) (FALSE). Default = TRUE. units NULL. Unit measurement, \"t\" \"lb\". Default = \"t\".","code":""},{"path":"https://commfish.github.io/BSAIcrabR/reference/get_total_catch.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Total Catch — get_total_catch","text":"Data frame including crab year, fishery, grouping variables, effort, average weight, total catch. Average weights used expansion weight based crab year, fishery, sex. '' variables included , sum total catch variables (.e., sex shell condition) equal total catch sex.","code":""},{"path":"https://commfish.github.io/BSAIcrabR/reference/get_total_catch.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Total Catch — get_total_catch","text":"","code":"get_avg_wt(pot_data, crab_data, ft_data, stock = \"BBRKC\") #> Error: object 'crab_data' not found"},{"path":"https://commfish.github.io/BSAIcrabR/reference/load_crab_dump.html","id":null,"dir":"Reference","previous_headings":"","what":"Load BSAI Observer Measure Pot Data — load_crab_dump","title":"Load BSAI Observer Measure Pot Data — load_crab_dump","text":"Load BSAI observer measure pot data data management routine","code":""},{"path":"https://commfish.github.io/BSAIcrabR/reference/load_crab_dump.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load BSAI Observer Measure Pot Data — load_crab_dump","text":"","code":"load_crab_dump(path, stock, database_pull = F, clean = T)"},{"path":"https://commfish.github.io/BSAIcrabR/reference/load_crab_dump.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load BSAI Observer Measure Pot Data — load_crab_dump","text":"path NULL. Path data file pulling directly database. stock NULL. Character string stock abbreviation: BSSC, WBT, EBT, BBRKC, EAG, WAG, PIGKC, SMBKC, PIBKC, PIRKC, WAIRKC. database_pull Default = FALSE. updated pull database. clean Default = TRUE. stock specific data cleaning.","code":""},{"path":"https://commfish.github.io/BSAIcrabR/reference/load_crab_dump.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load BSAI Observer Measure Pot Data — load_crab_dump","text":"Measure pot data time series fishery.","code":""},{"path":"https://commfish.github.io/BSAIcrabR/reference/load_crab_dump.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load BSAI Observer Measure Pot Data — load_crab_dump","text":"","code":"load_crab_dump(\"./data.csv\", stock = \"BBRKC\") #> Error: './data.csv' does not exist in current working directory ('/home/runner/work/BSAIcrabR/BSAIcrabR/docs/reference')."},{"path":"https://commfish.github.io/BSAIcrabR/reference/load_dockside.html","id":null,"dir":"Reference","previous_headings":"","what":"Load BSAI Dockside Sampling Data — load_dockside","title":"Load BSAI Dockside Sampling Data — load_dockside","text":"Load BSAI dockside data data management routine","code":""},{"path":"https://commfish.github.io/BSAIcrabR/reference/load_dockside.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load BSAI Dockside Sampling Data — load_dockside","text":"","code":"load_dockside(path, stock, database_pull = F, clean = T)"},{"path":"https://commfish.github.io/BSAIcrabR/reference/load_dockside.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load BSAI Dockside Sampling Data — load_dockside","text":"path NULL. Path data file pulling directly database. stock NULL. Character string stock abbreviation: BSSC, WBT, EBT, BBRKC, EAG, WAG, PIGKC, SMBKC, PIBKC, PIRKC, WAIRKC. database_pull Default = FALSE. updated pull database. clean Default = TRUE. stock specific data cleaning.","code":""},{"path":"https://commfish.github.io/BSAIcrabR/reference/load_dockside.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load BSAI Dockside Sampling Data — load_dockside","text":"Dock data time series fishery.","code":""},{"path":"https://commfish.github.io/BSAIcrabR/reference/load_dockside.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load BSAI Dockside Sampling Data — load_dockside","text":"","code":"load_dockside(\"./data.csv\", stock = \"BBRKC\") #> Error: './data.csv' does not exist in current working directory ('/home/runner/work/BSAIcrabR/BSAIcrabR/docs/reference')."},{"path":"https://commfish.github.io/BSAIcrabR/reference/load_pot_dump.html","id":null,"dir":"Reference","previous_headings":"","what":"Load BSAI Observer Count Pot Data — load_pot_dump","title":"Load BSAI Observer Count Pot Data — load_pot_dump","text":"Load BSAI observer count pot data data management routine","code":""},{"path":"https://commfish.github.io/BSAIcrabR/reference/load_pot_dump.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load BSAI Observer Count Pot Data — load_pot_dump","text":"","code":"load_pot_dump(path, stock, database_pull = F, clean = T)"},{"path":"https://commfish.github.io/BSAIcrabR/reference/load_pot_dump.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load BSAI Observer Count Pot Data — load_pot_dump","text":"path NULL. Path data file pulling directly database. stock NULL. Character string stock abbreviation: BSSC, WBT, EBT, BBRKC, EAG, WAG, PIGKC, SMBKC, PIBKC, PIRKC, WAIRKC. database_pull Default = FALSE. updated pull database. clean Default = TRUE. stock specific data cleaning.","code":""},{"path":"https://commfish.github.io/BSAIcrabR/reference/load_pot_dump.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load BSAI Observer Count Pot Data — load_pot_dump","text":"Measure pot data time series fishery.","code":""},{"path":"https://commfish.github.io/BSAIcrabR/reference/load_pot_dump.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load BSAI Observer Count Pot Data — load_pot_dump","text":"","code":"load_pot_dump(\"./data.csv\", stock = \"BBRKC\") #> Error: './data.csv' does not exist in current working directory ('/home/runner/work/BSAIcrabR/BSAIcrabR/docs/reference')."}]
